# state file generated using paraview version 5.12.0-RC3
import paraview
paraview.compatibility.major = 5
paraview.compatibility.minor = 12

#### import the simple module from the paraview
from paraview.simple import *
#### disable automatic camera reset on 'Show'
paraview.simple._DisableFirstRenderCameraReset()

# ----------------------------------------------------------------
# setup views used in the visualization
# ----------------------------------------------------------------

# get the material library
materialLibrary1 = GetMaterialLibrary()

# Create a new 'Render View'
renderView1 = CreateView('RenderView')
renderView1.ViewSize = [780, 582]
renderView1.AxesGrid = 'Grid Axes 3D Actor'
renderView1.CenterOfRotation = [1009.0897216796875, 1000.0, -2052.5]
renderView1.StereoType = 'Crystal Eyes'
renderView1.CameraPosition = [3092.1355689945585, -2721.371853951053, -373.2725021685094]
renderView1.CameraFocalPoint = [961.0168903703916, 938.8788485640857, -2121.8532890524098]
renderView1.CameraViewUp = [-0.15538663094581442, 0.3507066336072568, 0.9235041158907602]
renderView1.CameraFocalDisk = 1.0
renderView1.CameraParallelScale = 1435.015092742787
renderView1.LegendGrid = 'Legend Grid Actor'
renderView1.BackEnd = 'OSPRay raycaster'
renderView1.OSPRayMaterialLibrary = materialLibrary1

# Create a new 'Render View'
renderView2 = CreateView('RenderView')
renderView2.ViewSize = [779, 582]
renderView2.AxesGrid = 'Grid Axes 3D Actor'
renderView2.CenterOfRotation = [1009.0897216796875, 1000.0, -2052.5]
renderView2.StereoType = 'Crystal Eyes'
renderView2.CameraPosition = [2526.807008955713, -3088.0592193408347, -643.1764484231372]
renderView2.CameraFocalPoint = [1053.2247622715029, 995.3557285172672, -2109.776094463847]
renderView2.CameraViewUp = [-0.16590643002557484, 0.27976055198988314, 0.9456262951221719]
renderView2.CameraFocalDisk = 1.0
renderView2.CameraParallelScale = 1435.015092742787
renderView2.LegendGrid = 'Legend Grid Actor'
renderView2.BackEnd = 'OSPRay raycaster'
renderView2.OSPRayMaterialLibrary = materialLibrary1

SetActiveView(None)

# ----------------------------------------------------------------
# setup view layouts
# ----------------------------------------------------------------

# create new layout object 'Layout #1'
layout1 = CreateLayout(name='Layout #1')
layout1.SplitHorizontal(0, 0.500000)
layout1.AssignView(1, renderView1)
layout1.AssignView(2, renderView2)
layout1.SetSize(1560, 582)

# ----------------------------------------------------------------
# restore active view
SetActiveView(renderView1)
# ----------------------------------------------------------------

# ----------------------------------------------------------------
# setup the data processing pipelines
# ----------------------------------------------------------------

# create a new 'XML Unstructured Grid Reader'
meshvtu = XMLUnstructuredGridReader(registrationName='mesh.vtu', FileName=['C:\\Users\\isaifullin\\projects\\open-darts_dev\\models\\cpg_sloping_fault\\results_geothermal_case_40x40x10_wrate\\mesh.vtu'])
meshvtu.CellArrayStatus = ['volume', 'global_to_local', 'poro', 'permx', 'permy', 'permz', 'depth', 'actnum', 'heat_capacity', 'rock_conduction']
meshvtu.TimeArray = 'None'

# create a new 'PVD Reader'
solutionpvd = PVDReader(registrationName='solution.pvd', FileName='C:\\Users\\isaifullin\\projects\\open-darts_dev\\models\\cpg_sloping_fault\\results_geothermal_case_40x40x10_wrate\\solution.pvd')
solutionpvd.CellArrays = ['temperature']

# create a new 'Legacy VTK Reader'
wellsvtk = LegacyVTKReader(registrationName='wells.vtk', FileNames=['C:\\Users\\isaifullin\\projects\\open-darts_dev\\models\\cpg_sloping_fault\\results_geothermal_case_40x40x10_wrate\\wells.vtk'])

# create a new 'Threshold'
threshold1 = Threshold(registrationName='Threshold1', Input=solutionpvd)
threshold1.Scalars = ['CELLS', 'temperature']
threshold1.LowerThreshold = 301.01877517351045
threshold1.UpperThreshold = 330.3006961037884

# ----------------------------------------------------------------
# setup the visualization in view 'renderView1'
# ----------------------------------------------------------------

# show data from solutionpvd
solutionpvdDisplay = Show(solutionpvd, renderView1, 'UnstructuredGridRepresentation')

# trace defaults for the display properties.
solutionpvdDisplay.Representation = 'Outline'
solutionpvdDisplay.ColorArrayName = ['POINTS', '']
solutionpvdDisplay.SelectTCoordArray = 'None'
solutionpvdDisplay.SelectNormalArray = 'None'
solutionpvdDisplay.SelectTangentArray = 'None'
solutionpvdDisplay.OSPRayScaleFunction = 'Piecewise Function'
solutionpvdDisplay.Assembly = ''
solutionpvdDisplay.SelectOrientationVectors = 'None'
solutionpvdDisplay.ScaleFactor = 201.8179443359375
solutionpvdDisplay.SelectScaleArray = 'None'
solutionpvdDisplay.GlyphType = 'Arrow'
solutionpvdDisplay.GlyphTableIndexArray = 'None'
solutionpvdDisplay.GaussianRadius = 10.090897216796876
solutionpvdDisplay.SetScaleArray = [None, '']
solutionpvdDisplay.ScaleTransferFunction = 'Piecewise Function'
solutionpvdDisplay.OpacityArray = [None, '']
solutionpvdDisplay.OpacityTransferFunction = 'Piecewise Function'
solutionpvdDisplay.DataAxesGrid = 'Grid Axes Representation'
solutionpvdDisplay.PolarAxes = 'Polar Axes Representation'
solutionpvdDisplay.ScalarOpacityUnitDistance = 93.63156918612788
solutionpvdDisplay.OpacityArrayName = ['CELLS', 'temperature']
solutionpvdDisplay.SelectInputVectors = [None, '']
solutionpvdDisplay.WriteLog = ''

# init the 'Piecewise Function' selected for 'OSPRayScaleFunction'
solutionpvdDisplay.OSPRayScaleFunction.Points = [472.22524879194134, 0.0, 0.5, 0.0, 472.22531497989996, 1.0, 0.5, 0.0]

# show data from threshold1
threshold1Display = Show(threshold1, renderView1, 'UnstructuredGridRepresentation')

# get 2D transfer function for 'temperature'
temperatureTF2D = GetTransferFunction2D('temperature')

# get color transfer function/color map for 'temperature'
temperatureLUT = GetColorTransferFunction('temperature')
temperatureLUT.TransferFunction2D = temperatureTF2D
temperatureLUT.RGBPoints = [301.01877517351045, 0.267004, 0.004874, 0.329415, 301.2484625593168, 0.26851, 0.009605, 0.335427, 301.47809140093744, 0.269944, 0.014625, 0.341379, 301.70777878674375, 0.271305, 0.019942, 0.347269, 301.9374075780734, 0.272594, 0.025563, 0.353093, 302.1670949638797, 0.273809, 0.031497, 0.358853, 302.3967238055004, 0.274952, 0.037752, 0.364543, 302.6264111913067, 0.276022, 0.044167, 0.370164, 302.8560985771131, 0.277018, 0.050344, 0.375715, 303.0857274187337, 0.277941, 0.056324, 0.381191, 303.31541480454007, 0.278791, 0.062145, 0.386592, 303.5450435958697, 0.279566, 0.067836, 0.391917, 303.77473103196706, 0.280267, 0.073417, 0.397163, 304.0043598232967, 0.280894, 0.078907, 0.402329, 304.234047209103, 0.281446, 0.08432, 0.407414, 304.46373459490934, 0.281924, 0.089666, 0.412415, 304.69336343653, 0.282327, 0.094955, 0.417331, 304.92305082233634, 0.282656, 0.100196, 0.42216, 305.15267966395663, 0.28291, 0.105393, 0.426902, 305.38236704976333, 0.283091, 0.110553, 0.431554, 305.61199584109295, 0.283197, 0.11568, 0.436115, 305.84168322689925, 0.283229, 0.120777, 0.440584, 306.0713706126957, 0.283187, 0.125848, 0.44496, 306.30099945432625, 0.283072, 0.130895, 0.449241, 306.5306868401326, 0.282884, 0.13592, 0.453427, 306.76031568175324, 0.282623, 0.140926, 0.457517, 306.9900030675596, 0.28229, 0.145912, 0.46151, 307.2196318588892, 0.281887, 0.150881, 0.465405, 307.4493192446856, 0.281412, 0.155834, 0.469201, 307.6789480863162, 0.280868, 0.160771, 0.472899, 307.90863547212257, 0.280255, 0.165693, 0.476498, 308.13832285792887, 0.279574, 0.170599, 0.479997, 308.36795169954956, 0.278826, 0.17549, 0.483397, 308.59763908535587, 0.278012, 0.180367, 0.486697, 308.8272678766756, 0.277134, 0.185228, 0.489898, 309.0569553127825, 0.276194, 0.190074, 0.493001, 309.2865841041125, 0.275191, 0.194905, 0.496005, 309.51627148990895, 0.274128, 0.199721, 0.498911, 309.74595887571525, 0.273006, 0.20452, 0.501721, 309.97558771734583, 0.271828, 0.209303, 0.504434, 310.20527510315213, 0.270595, 0.214069, 0.507052, 310.4349039447725, 0.269308, 0.218818, 0.509577, 310.6645913305788, 0.267968, 0.223549, 0.512008, 310.89422012189885, 0.26658, 0.228262, 0.514349, 311.1239075077052, 0.265145, 0.232956, 0.516599, 311.3535948935115, 0.263663, 0.237631, 0.518762, 311.58322373513187, 0.262138, 0.242286, 0.520837, 311.81291112093817, 0.260571, 0.246922, 0.522828, 312.04253996256875, 0.258965, 0.251537, 0.524736, 312.27222734837505, 0.257322, 0.25613, 0.526563, 312.5018561396951, 0.255645, 0.260703, 0.528312, 312.7315435255015, 0.253935, 0.265254, 0.529983, 312.9612309113078, 0.252194, 0.269783, 0.531579, 313.19085975292813, 0.250425, 0.27429, 0.533103, 313.42054713873443, 0.248629, 0.278775, 0.534556, 313.650175980365, 0.246811, 0.283237, 0.535941, 313.87986336616143, 0.244972, 0.287675, 0.53726, 314.1094921574914, 0.243113, 0.292092, 0.538516, 314.3391795935983, 0.241237, 0.296485, 0.539709, 314.5688669793948, 0.239346, 0.300855, 0.540844, 314.7984957707244, 0.237441, 0.305202, 0.541921, 315.0281831565307, 0.235526, 0.309527, 0.542944, 315.2578119981514, 0.233603, 0.313828, 0.543914, 315.4874993839577, 0.231674, 0.318106, 0.544834, 315.7171282255883, 0.229739, 0.322361, 0.545706, 315.9468156113847, 0.227802, 0.326594, 0.546532, 316.17650299719105, 0.225863, 0.330805, 0.547314, 316.40613178852067, 0.223925, 0.334994, 0.548053, 316.635819174327, 0.221989, 0.339161, 0.548752, 316.86544801594766, 0.220057, 0.343307, 0.549413, 317.095135401754, 0.21813, 0.347432, 0.550038, 317.32476424337466, 0.21621, 0.351535, 0.550627, 317.554451629181, 0.214298, 0.355619, 0.551184, 317.7841390149873, 0.212395, 0.359683, 0.55171, 318.01376780631693, 0.210503, 0.363727, 0.552206, 318.2434551921233, 0.208623, 0.367752, 0.552675, 318.47308403374393, 0.206756, 0.371758, 0.553117, 318.7027714195503, 0.204903, 0.375746, 0.553533, 318.9324002611709, 0.203063, 0.379716, 0.553925, 319.1620876469773, 0.201239, 0.38367, 0.554294, 319.3917164383069, 0.19943, 0.387607, 0.554642, 319.6214038241132, 0.197636, 0.391528, 0.554969, 319.8510912602106, 0.19586, 0.395433, 0.555276, 320.0807200515402, 0.1941, 0.399323, 0.555565, 320.31040743734656, 0.192357, 0.403199, 0.555836, 320.5400362789672, 0.190631, 0.407061, 0.556089, 320.76972366477355, 0.188923, 0.41091, 0.556326, 320.9993525063942, 0.187231, 0.414746, 0.556547, 321.22903989220055, 0.185556, 0.41857, 0.556753, 321.45872727800685, 0.183898, 0.422383, 0.556944, 321.68835606933646, 0.182256, 0.426184, 0.55712, 321.9180434551428, 0.180629, 0.429975, 0.557282, 322.14767229676346, 0.179019, 0.433756, 0.55743, 322.3773596825698, 0.177423, 0.437527, 0.557565, 322.60698852419046, 0.175841, 0.44129, 0.557685, 322.8366759099968, 0.174274, 0.445044, 0.557792, 323.06636329580317, 0.172719, 0.448791, 0.557885, 323.2959920871328, 0.171176, 0.45253, 0.557965, 323.5256794729391, 0.169646, 0.456262, 0.55803, 323.7553083145598, 0.168126, 0.459988, 0.558082, 323.9849957003661, 0.166617, 0.463708, 0.558119, 324.2146245419867, 0.165117, 0.467423, 0.558141, 324.4443119277931, 0.163625, 0.471133, 0.558148, 324.67399931359944, 0.162142, 0.474838, 0.55814, 324.90362810492906, 0.160665, 0.47854, 0.558115, 325.1333155410261, 0.159194, 0.482237, 0.558073, 325.36294433235605, 0.157729, 0.485932, 0.558013, 325.59263171816235, 0.15627, 0.489624, 0.557936, 325.82226055978305, 0.154815, 0.493313, 0.55784, 326.05194794558935, 0.153364, 0.497, 0.557724, 326.2816353313957, 0.151918, 0.500685, 0.557587, 326.511264173016, 0.150476, 0.504369, 0.55743, 326.74095155882236, 0.149039, 0.508051, 0.55725, 326.9705803501523, 0.147607, 0.511733, 0.557049, 327.2002677359487, 0.14618, 0.515413, 0.556823, 327.4298965775793, 0.144759, 0.519093, 0.556572, 327.6595839633856, 0.143343, 0.522773, 0.556295, 327.889271349192, 0.141935, 0.526453, 0.555991, 328.11890019081227, 0.140536, 0.530132, 0.555659, 328.34858757661897, 0.139147, 0.533812, 0.555298, 328.5782163679387, 0.13777, 0.537492, 0.554906, 328.807903753745, 0.136408, 0.541173, 0.554483, 329.0375325953756, 0.135066, 0.544853, 0.554029, 329.26721998117165, 0.133743, 0.548535, 0.553541, 329.49690736697835, 0.132444, 0.552216, 0.553018, 329.72653620860854, 0.131172, 0.555899, 0.552459, 329.95622359441523, 0.129933, 0.559582, 0.551864, 330.18585238573496, 0.128729, 0.563265, 0.551229, 330.4155398218419, 0.127568, 0.566949, 0.550556, 330.6451686131616, 0.126453, 0.570633, 0.549841, 330.874855998968, 0.125394, 0.574318, 0.549086, 331.1044848405985, 0.124395, 0.578002, 0.548287, 331.3341722264052, 0.123463, 0.581687, 0.547445, 331.56385961220127, 0.122606, 0.585371, 0.546557, 331.79348845383186, 0.121831, 0.589055, 0.545623, 332.02317583963816, 0.121148, 0.592739, 0.544641, 332.2528046309579, 0.120565, 0.596422, 0.543611, 332.4824920167646, 0.120092, 0.600104, 0.54253, 332.7121208583849, 0.119738, 0.603785, 0.5414, 332.94180824419124, 0.119512, 0.607464, 0.540218, 333.17149562999754, 0.119423, 0.611141, 0.538982, 333.4011244716281, 0.119483, 0.614817, 0.537692, 333.63081185742453, 0.119699, 0.61849, 0.536347, 333.8604406487545, 0.120081, 0.622161, 0.534946, 334.09012803456085, 0.120638, 0.625828, 0.533488, 334.31975687618115, 0.12138, 0.629492, 0.531973, 334.5494442619875, 0.122312, 0.633153, 0.530398, 334.7791316477938, 0.123444, 0.636809, 0.528763, 335.0087604894145, 0.12478, 0.640461, 0.527068, 335.2384478752208, 0.126326, 0.644107, 0.525311, 335.4680766665508, 0.128087, 0.647749, 0.523491, 335.6977641026478, 0.130067, 0.651384, 0.521608, 335.9273928939774, 0.132268, 0.655014, 0.519661, 336.15708027978377, 0.134692, 0.658636, 0.517649, 336.38676766559007, 0.137339, 0.662252, 0.515571, 336.61639650721077, 0.14021, 0.665859, 0.513427, 336.84608389301707, 0.143303, 0.669459, 0.511215, 337.07571273463776, 0.146616, 0.67305, 0.508936, 337.30540012044406, 0.150148, 0.676631, 0.506589, 337.5350289117737, 0.153894, 0.680203, 0.504172, 337.76471629758004, 0.157851, 0.683765, 0.501686, 337.9944036833864, 0.162016, 0.687316, 0.499129, 338.22403252500703, 0.166383, 0.690856, 0.496502, 338.45371991081333, 0.170948, 0.694384, 0.493803, 338.68334875243403, 0.175707, 0.6979, 0.491033, 338.9130361382404, 0.180653, 0.701402, 0.488189, 339.14266492957, 0.185783, 0.704891, 0.485273, 339.3723523153763, 0.19109, 0.708366, 0.482284, 339.60203970118266, 0.196571, 0.711827, 0.479221, 339.8316685428033, 0.202219, 0.715272, 0.476084, 340.06135592860966, 0.20803, 0.718701, 0.472873, 340.2909847702303, 0.214, 0.722114, 0.469588, 340.52067215603665, 0.220124, 0.725509, 0.466226, 340.75030094736627, 0.226397, 0.728888, 0.462789, 340.97998838346365, 0.232815, 0.732247, 0.459277, 341.20967576926995, 0.239374, 0.735588, 0.455688, 341.43930456059957, 0.24607, 0.73891, 0.452024, 341.6689919464059, 0.252899, 0.742211, 0.448284, 341.89862078802656, 0.259857, 0.745492, 0.444467, 342.1283081738329, 0.266941, 0.748751, 0.440573, 342.35793701545356, 0.274149, 0.751988, 0.436601, 342.5876244012599, 0.281477, 0.755203, 0.432552, 342.81725319258953, 0.288921, 0.758394, 0.428426, 343.04694057839583, 0.296479, 0.761561, 0.424223, 343.2766279642022, 0.304148, 0.764704, 0.419943, 343.5062568058229, 0.311925, 0.767822, 0.415586, 343.7359441916292, 0.319809, 0.770914, 0.411152, 343.9655730332498, 0.327796, 0.77398, 0.40664, 344.1952604190562, 0.335885, 0.777018, 0.402049, 344.4248892103858, 0.344074, 0.780029, 0.397381, 344.65457659619216, 0.35236, 0.783011, 0.392636, 344.88426398198857, 0.360741, 0.785964, 0.387814, 345.11389282361915, 0.369214, 0.788888, 0.382914, 345.34358020942545, 0.377779, 0.791781, 0.377939, 345.57320905104615, 0.386433, 0.794644, 0.372886, 345.80289643685245, 0.395174, 0.797475, 0.367757, 346.03252522818207, 0.404001, 0.800275, 0.362552, 346.2622126139785, 0.412913, 0.803041, 0.357269, 346.4919000500854, 0.421908, 0.805774, 0.35191, 346.7215288414154, 0.430983, 0.808473, 0.346476, 346.95121622721183, 0.440137, 0.811138, 0.340967, 347.1808450688424, 0.449368, 0.813768, 0.335384, 347.4105324546487, 0.458674, 0.816363, 0.329727, 347.64016129626907, 0.468053, 0.818921, 0.323998, 347.86984868207537, 0.477504, 0.821444, 0.318195, 348.09953606788173, 0.487026, 0.823929, 0.312321, 348.3291648592018, 0.496615, 0.826376, 0.306377, 348.5588522450081, 0.506271, 0.828786, 0.300362, 348.7884810866387, 0.515992, 0.831158, 0.294279, 349.01816847244504, 0.525776, 0.833491, 0.288127, 349.24779731406534, 0.535621, 0.835785, 0.281908, 349.47748469987164, 0.545524, 0.838039, 0.275626, 349.707172085678, 0.555484, 0.840254, 0.269281, 349.93680087699806, 0.565498, 0.84243, 0.262877, 350.16648826280436, 0.575563, 0.844566, 0.256415, 350.3961171044247, 0.585678, 0.846661, 0.249897, 350.625804490231, 0.595839, 0.848717, 0.243329, 350.8554333318616, 0.606045, 0.850733, 0.236712, 351.0851207176679, 0.616293, 0.852709, 0.230052, 351.3148081034644, 0.626579, 0.854645, 0.223353, 351.54443689479433, 0.636902, 0.856542, 0.21662, 351.77412433090126, 0.647257, 0.8584, 0.209861, 352.003753122221, 0.657642, 0.860219, 0.203082, 352.23344050802734, 0.668054, 0.861999, 0.196293, 352.463069349648, 0.678489, 0.863742, 0.189503, 352.6927567354543, 0.688944, 0.865448, 0.182725, 352.92244412126064, 0.699415, 0.867117, 0.175971, 353.1520729628912, 0.709898, 0.868751, 0.169257, 353.38176034868764, 0.720391, 0.87035, 0.162603, 353.61138914001725, 0.730889, 0.871916, 0.156029, 353.84107652582395, 0.741388, 0.873449, 0.149561, 354.07070536744425, 0.751884, 0.874951, 0.143228, 354.30039275325055, 0.762373, 0.876424, 0.137064, 354.53002159488113, 0.772852, 0.877868, 0.131109, 354.7597089806776, 0.783315, 0.879285, 0.125405, 354.9893963664839, 0.79376, 0.880678, 0.120005, 355.2190251578135, 0.804182, 0.882046, 0.114965, 355.4487125436202, 0.814576, 0.883393, 0.110347, 355.6783413852405, 0.82494, 0.88472, 0.106217, 355.9080287710469, 0.83527, 0.886029, 0.102646, 356.1376576126675, 0.845561, 0.887322, 0.099702, 356.36734499847387, 0.85581, 0.888601, 0.097452, 356.59703238428017, 0.866013, 0.889868, 0.095953, 356.8266611756102, 0.876168, 0.891125, 0.09525, 357.05634861170716, 0.886271, 0.892374, 0.095374, 357.2859774030368, 0.89632, 0.893616, 0.096335, 357.51566478884314, 0.906311, 0.894855, 0.098125, 357.7452936304638, 0.916242, 0.896091, 0.100717, 357.97498101627014, 0.926106, 0.89733, 0.104071, 358.20466840207644, 0.935904, 0.89857, 0.108131, 358.43429724369713, 0.945636, 0.899815, 0.112838, 358.66398462950343, 0.9553, 0.901065, 0.118128, 358.89361342083305, 0.964894, 0.902323, 0.123941, 359.1233008066394, 0.974417, 0.90359, 0.130215, 359.3529296482601, 0.983868, 0.904867, 0.136897, 359.5826170340664, 0.993248, 0.906157, 0.143936]
temperatureLUT.NanColor = [1.0, 0.0, 0.0]
temperatureLUT.ScalarRangeInitialized = 1.0

# get opacity transfer function/opacity map for 'temperature'
temperaturePWF = GetOpacityTransferFunction('temperature')
temperaturePWF.Points = [301.01877517351045, 0.0, 0.5, 0.0, 359.5826170340664, 1.0, 0.5, 0.0]
temperaturePWF.ScalarRangeInitialized = 1

# trace defaults for the display properties.
threshold1Display.Representation = 'Surface'
threshold1Display.ColorArrayName = ['CELLS', 'temperature']
threshold1Display.LookupTable = temperatureLUT
threshold1Display.SelectTCoordArray = 'None'
threshold1Display.SelectNormalArray = 'None'
threshold1Display.SelectTangentArray = 'None'
threshold1Display.OSPRayScaleFunction = 'Piecewise Function'
threshold1Display.Assembly = ''
threshold1Display.SelectOrientationVectors = 'None'
threshold1Display.ScaleFactor = 201.8179443359375
threshold1Display.SelectScaleArray = 'None'
threshold1Display.GlyphType = 'Arrow'
threshold1Display.GlyphTableIndexArray = 'None'
threshold1Display.GaussianRadius = 10.090897216796876
threshold1Display.SetScaleArray = [None, '']
threshold1Display.ScaleTransferFunction = 'Piecewise Function'
threshold1Display.OpacityArray = [None, '']
threshold1Display.OpacityTransferFunction = 'Piecewise Function'
threshold1Display.DataAxesGrid = 'Grid Axes Representation'
threshold1Display.PolarAxes = 'Polar Axes Representation'
threshold1Display.ScalarOpacityFunction = temperaturePWF
threshold1Display.ScalarOpacityUnitDistance = 93.63156918612788
threshold1Display.OpacityArrayName = ['CELLS', 'temperature']
threshold1Display.SelectInputVectors = [None, '']
threshold1Display.WriteLog = ''

# init the 'Piecewise Function' selected for 'OSPRayScaleFunction'
threshold1Display.OSPRayScaleFunction.Points = [472.22524879194134, 0.0, 0.5, 0.0, 472.22531497989996, 1.0, 0.5, 0.0]

# show data from wellsvtk
wellsvtkDisplay = Show(wellsvtk, renderView1, 'GeometryRepresentation')

# trace defaults for the display properties.
wellsvtkDisplay.Representation = 'Surface'
wellsvtkDisplay.ColorArrayName = [None, '']
wellsvtkDisplay.SelectTCoordArray = 'None'
wellsvtkDisplay.SelectNormalArray = 'TubeNormals'
wellsvtkDisplay.SelectTangentArray = 'None'
wellsvtkDisplay.OSPRayScaleArray = 'TubeNormals'
wellsvtkDisplay.OSPRayScaleFunction = 'Piecewise Function'
wellsvtkDisplay.Assembly = ''
wellsvtkDisplay.SelectOrientationVectors = 'None'
wellsvtkDisplay.ScaleFactor = 106.60030212402344
wellsvtkDisplay.SelectScaleArray = 'None'
wellsvtkDisplay.GlyphType = 'Arrow'
wellsvtkDisplay.GlyphTableIndexArray = 'None'
wellsvtkDisplay.GaussianRadius = 5.330015106201172
wellsvtkDisplay.SetScaleArray = ['POINTS', 'TubeNormals']
wellsvtkDisplay.ScaleTransferFunction = 'Piecewise Function'
wellsvtkDisplay.OpacityArray = ['POINTS', 'TubeNormals']
wellsvtkDisplay.OpacityTransferFunction = 'Piecewise Function'
wellsvtkDisplay.DataAxesGrid = 'Grid Axes Representation'
wellsvtkDisplay.PolarAxes = 'Polar Axes Representation'
wellsvtkDisplay.SelectInputVectors = ['POINTS', 'TubeNormals']
wellsvtkDisplay.WriteLog = ''

# init the 'Piecewise Function' selected for 'OSPRayScaleFunction'
wellsvtkDisplay.OSPRayScaleFunction.Points = [472.22524879194134, 0.0, 0.5, 0.0, 472.22531497989996, 1.0, 0.5, 0.0]

# init the 'Piecewise Function' selected for 'ScaleTransferFunction'
wellsvtkDisplay.ScaleTransferFunction.Points = [-0.9980270266532898, 0.0, 0.5, 0.0, 0.9980270266532898, 1.0, 0.5, 0.0]

# init the 'Piecewise Function' selected for 'OpacityTransferFunction'
wellsvtkDisplay.OpacityTransferFunction.Points = [-0.9980270266532898, 0.0, 0.5, 0.0, 0.9980270266532898, 1.0, 0.5, 0.0]

# setup the color legend parameters for each legend in this view

# get color legend/bar for temperatureLUT in view renderView1
temperatureLUTColorBar = GetScalarBar(temperatureLUT, renderView1)
temperatureLUTColorBar.WindowLocation = 'Any Location'
temperatureLUTColorBar.Position = [0.8212129234691377, 0.03890034364261169]
temperatureLUTColorBar.Title = 'temperature'
temperatureLUTColorBar.ComponentTitle = ''
temperatureLUTColorBar.ScalarBarLength = 0.3300000000000001
temperatureLUTColorBar.AutomaticLabelFormat = 0
temperatureLUTColorBar.LabelFormat = '%-#6.3f'
temperatureLUTColorBar.RangeLabelFormat = '%-#6.3f'

# set color bar visibility
temperatureLUTColorBar.Visibility = 1

# show color legend
threshold1Display.SetScalarBarVisibility(renderView1, True)

# ----------------------------------------------------------------
# setup the visualization in view 'renderView2'
# ----------------------------------------------------------------

# show data from meshvtu
meshvtuDisplay = Show(meshvtu, renderView2, 'UnstructuredGridRepresentation')

# get 2D transfer function for 'permx'
permxTF2D = GetTransferFunction2D('permx')

# get color transfer function/color map for 'permx'
permxLUT = GetColorTransferFunction('permx')
permxLUT.TransferFunction2D = permxTF2D
permxLUT.RGBPoints = [1e-05, 0.267004, 0.004874, 0.329415, 0.3922099574130898, 0.26851, 0.009605, 0.335427, 0.7843099484058309, 0.269944, 0.014625, 0.341379, 1.1765099058189208, 0.271305, 0.019942, 0.347269, 1.5686098109298574, 0.272594, 0.025563, 0.353093, 1.9608097683429473, 0.273809, 0.031497, 0.358853, 2.3529097593356885, 0.274952, 0.037752, 0.364543, 2.7451097167487784, 0.276022, 0.044167, 0.370164, 3.137309674161868, 0.277018, 0.050344, 0.375715, 3.5294096651546094, 0.277941, 0.056324, 0.381191, 3.921609622567699, 0.278791, 0.062145, 0.386592, 4.313709527678635, 0.279566, 0.067836, 0.391917, 4.70590957097353, 0.280267, 0.073417, 0.397163, 5.098009476084466, 0.280894, 0.078907, 0.402329, 5.490209433497556, 0.281446, 0.08432, 0.407414, 5.882409390910645, 0.281924, 0.089666, 0.412415, 6.274509381903387, 0.282327, 0.094955, 0.417331, 6.666709339316476, 0.282656, 0.100196, 0.42216, 7.058809330309218, 0.28291, 0.105393, 0.426902, 7.451009287722307, 0.283091, 0.110553, 0.431554, 7.843109192833244, 0.283197, 0.11568, 0.436115, 8.235309150246334, 0.283229, 0.120777, 0.440584, 8.627509107659424, 0.283187, 0.125848, 0.44496, 9.019609098652165, 0.283072, 0.130895, 0.449241, 9.411809056065254, 0.282884, 0.13592, 0.453427, 9.803909047057996, 0.282623, 0.140926, 0.457517, 10.196109004471085, 0.28229, 0.145912, 0.46151, 10.588208909582022, 0.281887, 0.150881, 0.465405, 10.980408866995113, 0.281412, 0.155834, 0.469201, 11.372508857987853, 0.280868, 0.160771, 0.472899, 11.764708815400944, 0.280255, 0.165693, 0.476498, 12.156908772814033, 0.279574, 0.170599, 0.479997, 12.549008763806775, 0.278826, 0.17549, 0.483397, 12.941208721219864, 0.278012, 0.180367, 0.486697, 13.3333086263308, 0.277134, 0.185228, 0.489898, 13.725508669625695, 0.276194, 0.190074, 0.493001, 14.117608574736632, 0.275191, 0.194905, 0.496005, 14.509808532149721, 0.274128, 0.199721, 0.498911, 14.90200848956281, 0.273006, 0.20452, 0.501721, 15.29410848055555, 0.271828, 0.209303, 0.504434, 15.686308437968643, 0.270595, 0.214069, 0.507052, 16.078408428961385, 0.269308, 0.218818, 0.509577, 16.470608386374472, 0.267968, 0.223549, 0.512008, 16.862708291485408, 0.26658, 0.228262, 0.514349, 17.2549082488985, 0.265145, 0.232956, 0.516599, 17.64710820631159, 0.263663, 0.237631, 0.518762, 18.03920819730433, 0.262138, 0.242286, 0.520837, 18.43140815471742, 0.260571, 0.246922, 0.522828, 18.82350814571016, 0.258965, 0.251537, 0.524736, 19.21570810312325, 0.257322, 0.25613, 0.526563, 19.607808008234187, 0.255645, 0.260703, 0.528312, 20.000007965647278, 0.253935, 0.265254, 0.529983, 20.392207923060365, 0.252194, 0.269783, 0.531579, 20.784307914053105, 0.250425, 0.27429, 0.533103, 21.1765078714662, 0.248629, 0.278775, 0.534556, 21.56860786245894, 0.246811, 0.283237, 0.535941, 21.960807819872027, 0.244972, 0.287675, 0.53726, 22.352907724982966, 0.243113, 0.292092, 0.538516, 22.74510776827786, 0.241237, 0.296485, 0.539709, 23.13730772569095, 0.239346, 0.300855, 0.540844, 23.529407630801888, 0.237441, 0.305202, 0.541921, 23.921607588214975, 0.235526, 0.309527, 0.542944, 24.313707579207716, 0.233603, 0.313828, 0.543914, 24.705907536620806, 0.231674, 0.318106, 0.544834, 25.09800752761355, 0.229739, 0.322361, 0.545706, 25.49020748502664, 0.227802, 0.326594, 0.546532, 25.882407442439728, 0.225863, 0.330805, 0.547314, 26.274507347550667, 0.223925, 0.334994, 0.548053, 26.66670730496375, 0.221989, 0.339161, 0.548752, 27.058807295956495, 0.220057, 0.343307, 0.549413, 27.45100725336959, 0.21813, 0.347432, 0.550038, 27.843107244362326, 0.21621, 0.351535, 0.550627, 28.235307201775417, 0.214298, 0.355619, 0.551184, 28.627507159188504, 0.212395, 0.359683, 0.55171, 29.019607064299443, 0.210503, 0.363727, 0.552206, 29.411807021712534, 0.208623, 0.367752, 0.552675, 29.803907012705274, 0.206756, 0.371758, 0.553117, 30.196106970118365, 0.204903, 0.375746, 0.553533, 30.5882069611111, 0.203063, 0.379716, 0.553925, 30.980406918524192, 0.201239, 0.38367, 0.554294, 31.372506823635135, 0.19943, 0.387607, 0.554642, 31.76470678104822, 0.197636, 0.391528, 0.554969, 32.15690682434312, 0.19586, 0.395433, 0.555276, 32.54900672945405, 0.1941, 0.399323, 0.555565, 32.94120668686715, 0.192357, 0.403199, 0.555836, 33.33330667785989, 0.190631, 0.407061, 0.556089, 33.72550663527297, 0.188923, 0.41091, 0.556326, 34.11760662626572, 0.187231, 0.414746, 0.556547, 34.50980658367881, 0.185556, 0.41857, 0.556753, 34.90200654109189, 0.183898, 0.422383, 0.556944, 35.29410644620283, 0.182256, 0.426184, 0.55712, 35.68630640361592, 0.180629, 0.429975, 0.557282, 36.07840639460866, 0.179019, 0.433756, 0.55743, 36.470606352021754, 0.177423, 0.437527, 0.557565, 36.862706343014494, 0.175841, 0.44129, 0.557685, 37.254906300427585, 0.174274, 0.445044, 0.557792, 37.64710625784067, 0.172719, 0.448791, 0.557885, 38.039206162951615, 0.171176, 0.45253, 0.557965, 38.431406120364706, 0.169646, 0.456262, 0.55803, 38.82350611135744, 0.168126, 0.459988, 0.558082, 39.21570606877053, 0.166617, 0.463708, 0.558119, 39.60780605976327, 0.165117, 0.467423, 0.558141, 40.00000601717636, 0.163625, 0.471133, 0.558148, 40.39220597458945, 0.162142, 0.474838, 0.55814, 40.78430587970039, 0.160665, 0.47854, 0.558115, 41.17650592299528, 0.159194, 0.482237, 0.558073, 41.568605828106215, 0.157729, 0.485932, 0.558013, 41.96080578551931, 0.15627, 0.489624, 0.557936, 42.35290577651205, 0.154815, 0.493313, 0.55784, 42.745105733925136, 0.153364, 0.497, 0.557724, 43.137305691338234, 0.151918, 0.500685, 0.557587, 43.52940568233097, 0.150476, 0.504369, 0.55743, 43.92160563974406, 0.149039, 0.508051, 0.55725, 44.313705544855, 0.147607, 0.511733, 0.557049, 44.70590550226809, 0.14618, 0.515413, 0.556823, 45.09800549326083, 0.144759, 0.519093, 0.556572, 45.49020545067392, 0.143343, 0.522773, 0.556295, 45.88240540808701, 0.141935, 0.526453, 0.555991, 46.27450539907975, 0.140536, 0.530132, 0.555659, 46.66670535649284, 0.139147, 0.533812, 0.555298, 47.05880526160378, 0.13777, 0.537492, 0.554906, 47.45100521901687, 0.136408, 0.541173, 0.554483, 47.843105210009604, 0.135066, 0.544853, 0.554029, 48.2353051674227, 0.133743, 0.548535, 0.553541, 48.627505124835785, 0.132444, 0.552216, 0.553018, 49.019605115828526, 0.131172, 0.555899, 0.552459, 49.41180507324162, 0.129933, 0.559582, 0.551864, 49.803904978352556, 0.128729, 0.563265, 0.551229, 50.19610502164745, 0.127568, 0.566949, 0.550556, 50.58820492675839, 0.126453, 0.570633, 0.549841, 50.98040488417148, 0.125394, 0.574318, 0.549086, 51.37250487516421, 0.124395, 0.578002, 0.548287, 51.7647048325773, 0.123463, 0.581687, 0.547445, 52.1569047899904, 0.122606, 0.585371, 0.546557, 52.54900478098314, 0.121831, 0.589055, 0.545623, 52.94120473839623, 0.121148, 0.592739, 0.544641, 53.33330464350716, 0.120565, 0.596422, 0.543611, 53.72550460092025, 0.120092, 0.600104, 0.54253, 54.11760459191299, 0.119738, 0.603785, 0.5414, 54.509804549326084, 0.119512, 0.607464, 0.540218, 54.90200450673918, 0.119423, 0.611141, 0.538982, 55.29410449773191, 0.119483, 0.614817, 0.537692, 55.686304455145006, 0.119699, 0.61849, 0.536347, 56.078404360255945, 0.120081, 0.622161, 0.534946, 56.470604317669036, 0.120638, 0.625828, 0.533488, 56.862704308661776, 0.12138, 0.629492, 0.531973, 57.25490426607486, 0.122312, 0.633153, 0.530398, 57.64710422348795, 0.123444, 0.636809, 0.528763, 58.03920421448069, 0.12478, 0.640461, 0.527068, 58.43140417189379, 0.126326, 0.644107, 0.525311, 58.82350407700473, 0.128087, 0.647749, 0.523491, 59.21570412029961, 0.130067, 0.651384, 0.521608, 59.60780402541055, 0.132268, 0.655014, 0.519661, 60.00000398282364, 0.134692, 0.658636, 0.517649, 60.39220394023673, 0.137339, 0.662252, 0.515571, 60.78430393122947, 0.14021, 0.665859, 0.513427, 61.17650388864256, 0.143303, 0.669459, 0.511215, 61.5686038796353, 0.146616, 0.67305, 0.508936, 61.96080383704839, 0.150148, 0.676631, 0.506589, 62.352903742159334, 0.153894, 0.680203, 0.504172, 62.745103699572425, 0.157851, 0.683765, 0.501686, 63.1373036569855, 0.162016, 0.687316, 0.499129, 63.52940364797825, 0.166383, 0.690856, 0.496502, 63.92160360539134, 0.170948, 0.694384, 0.493803, 64.31370359638409, 0.175707, 0.6979, 0.491033, 64.70590355379717, 0.180653, 0.701402, 0.488189, 65.0980034589081, 0.185783, 0.704891, 0.485273, 65.4902034163212, 0.19109, 0.708366, 0.482284, 65.88240337373429, 0.196571, 0.711827, 0.479221, 66.27450336472702, 0.202219, 0.715272, 0.476084, 66.66670332214012, 0.20803, 0.718701, 0.472873, 67.05880331313286, 0.214, 0.722114, 0.469588, 67.45100327054594, 0.220124, 0.725509, 0.466226, 67.84310317565688, 0.226397, 0.728888, 0.462789, 68.23530321895178, 0.232815, 0.732247, 0.459277, 68.62750317636487, 0.239374, 0.735588, 0.455688, 69.0196030814758, 0.24607, 0.73891, 0.452024, 69.41180303888889, 0.252899, 0.742211, 0.448284, 69.80390302988164, 0.259857, 0.745492, 0.444467, 70.19610298729472, 0.266941, 0.748751, 0.440573, 70.58820297828747, 0.274149, 0.751988, 0.436601, 70.98040293570057, 0.281477, 0.755203, 0.432552, 71.37250284081149, 0.288921, 0.758394, 0.428426, 71.76470279822458, 0.296479, 0.761561, 0.424223, 72.15690275563767, 0.304148, 0.764704, 0.419943, 72.54900274663042, 0.311925, 0.767822, 0.415586, 72.9412027040435, 0.319809, 0.770914, 0.411152, 73.33330269503624, 0.327796, 0.77398, 0.40664, 73.72550265244934, 0.335885, 0.777018, 0.402049, 74.11760255756028, 0.344074, 0.780029, 0.397381, 74.50980251497336, 0.35236, 0.783011, 0.392636, 74.90200247238646, 0.360741, 0.785964, 0.387814, 75.29410246337919, 0.369214, 0.788888, 0.382914, 75.68630242079229, 0.377779, 0.791781, 0.377939, 76.07840241178502, 0.386433, 0.794644, 0.372886, 76.47060236919812, 0.395174, 0.797475, 0.367757, 76.86270227430906, 0.404001, 0.800275, 0.362552, 77.25490223172214, 0.412913, 0.803041, 0.357269, 77.64710227501703, 0.421908, 0.805774, 0.35191, 78.03920218012797, 0.430983, 0.808473, 0.346476, 78.43140213754106, 0.440137, 0.811138, 0.340967, 78.8235021285338, 0.449368, 0.813768, 0.335384, 79.21570208594689, 0.458674, 0.816363, 0.329727, 79.60780207693963, 0.468053, 0.818921, 0.323998, 80.00000203435272, 0.477504, 0.821444, 0.318195, 80.39220199176582, 0.487026, 0.823929, 0.312321, 80.78430189687676, 0.496615, 0.826376, 0.306377, 81.17650185428984, 0.506271, 0.828786, 0.300362, 81.56860184528257, 0.515992, 0.831158, 0.294279, 81.96080180269567, 0.525776, 0.833491, 0.288127, 82.35290179368842, 0.535621, 0.835785, 0.281908, 82.7451017511015, 0.545524, 0.838039, 0.275626, 83.13730170851458, 0.555484, 0.840254, 0.269281, 83.52940161362552, 0.565498, 0.84243, 0.262877, 83.92160157103862, 0.575563, 0.844566, 0.256415, 84.31370156203135, 0.585678, 0.846661, 0.249897, 84.70590151944445, 0.595839, 0.848717, 0.243329, 85.09800151043719, 0.606045, 0.850733, 0.236712, 85.49020146785027, 0.616293, 0.852709, 0.230052, 85.88240142526337, 0.626579, 0.854645, 0.223353, 86.2745013303743, 0.636902, 0.856542, 0.21662, 86.6667013736692, 0.647257, 0.8584, 0.209861, 87.05880127878014, 0.657642, 0.860219, 0.203082, 87.45100123619322, 0.668054, 0.861999, 0.196293, 87.84310122718597, 0.678489, 0.863742, 0.189503, 88.23530118459905, 0.688944, 0.865448, 0.182725, 88.62750114201215, 0.699415, 0.867117, 0.175971, 89.01960113300488, 0.709898, 0.868751, 0.169257, 89.41180109041797, 0.720391, 0.87035, 0.162603, 89.80390099552892, 0.730889, 0.871916, 0.156029, 90.196100952942, 0.741388, 0.873449, 0.149561, 90.58820094393475, 0.751884, 0.874951, 0.143228, 90.98040090134783, 0.762373, 0.876424, 0.137064, 91.37250089234057, 0.772852, 0.877868, 0.131109, 91.76470084975367, 0.783315, 0.879285, 0.125405, 92.15690080716675, 0.79376, 0.880678, 0.120005, 92.54900071227769, 0.804182, 0.882046, 0.114965, 92.94120066969079, 0.814576, 0.883393, 0.110347, 93.33330066068352, 0.82494, 0.88472, 0.106217, 93.72550061809662, 0.83527, 0.886029, 0.102646, 94.11760060908935, 0.845561, 0.887322, 0.099702, 94.50980056650245, 0.85581, 0.888601, 0.097452, 94.90200052391553, 0.866013, 0.889868, 0.095953, 95.29410042902647, 0.876168, 0.891125, 0.09525, 95.68630047232136, 0.886271, 0.892374, 0.095374, 96.0784003774323, 0.89632, 0.893616, 0.096335, 96.4706003348454, 0.906311, 0.894855, 0.098125, 96.86270032583813, 0.916242, 0.896091, 0.100717, 97.25490028325122, 0.926106, 0.89733, 0.104071, 97.64710024066432, 0.935904, 0.89857, 0.108131, 98.03920023165705, 0.945636, 0.899815, 0.112838, 98.43140018907015, 0.9553, 0.901065, 0.118128, 98.82350009418109, 0.964894, 0.902323, 0.123941, 99.21570005159417, 0.974417, 0.90359, 0.130215, 99.6078000425869, 0.983868, 0.904867, 0.136897, 100.0, 0.993248, 0.906157, 0.143936]
permxLUT.NanColor = [1.0, 0.0, 0.0]
permxLUT.ScalarRangeInitialized = 1.0

# get opacity transfer function/opacity map for 'permx'
permxPWF = GetOpacityTransferFunction('permx')
permxPWF.Points = [1e-05, 0.0, 0.5, 0.0, 100.0, 1.0, 0.5, 0.0]
permxPWF.ScalarRangeInitialized = 1

# trace defaults for the display properties.
meshvtuDisplay.Representation = 'Surface'
meshvtuDisplay.ColorArrayName = ['CELLS', 'permx']
meshvtuDisplay.LookupTable = permxLUT
meshvtuDisplay.SelectTCoordArray = 'None'
meshvtuDisplay.SelectNormalArray = 'None'
meshvtuDisplay.SelectTangentArray = 'None'
meshvtuDisplay.OSPRayScaleFunction = 'Piecewise Function'
meshvtuDisplay.Assembly = ''
meshvtuDisplay.SelectOrientationVectors = 'None'
meshvtuDisplay.ScaleFactor = 201.8179443359375
meshvtuDisplay.SelectScaleArray = 'None'
meshvtuDisplay.GlyphType = 'Arrow'
meshvtuDisplay.GlyphTableIndexArray = 'None'
meshvtuDisplay.GaussianRadius = 10.090897216796876
meshvtuDisplay.SetScaleArray = [None, '']
meshvtuDisplay.ScaleTransferFunction = 'Piecewise Function'
meshvtuDisplay.OpacityArray = [None, '']
meshvtuDisplay.OpacityTransferFunction = 'Piecewise Function'
meshvtuDisplay.DataAxesGrid = 'Grid Axes Representation'
meshvtuDisplay.PolarAxes = 'Polar Axes Representation'
meshvtuDisplay.ScalarOpacityFunction = permxPWF
meshvtuDisplay.ScalarOpacityUnitDistance = 93.63156918612788
meshvtuDisplay.OpacityArrayName = ['CELLS', 'actnum']
meshvtuDisplay.SelectInputVectors = [None, '']
meshvtuDisplay.WriteLog = ''

# init the 'Piecewise Function' selected for 'OSPRayScaleFunction'
meshvtuDisplay.OSPRayScaleFunction.Points = [472.22524879194134, 0.0, 0.5, 0.0, 472.22531497989996, 1.0, 0.5, 0.0]

# show data from wellsvtk
wellsvtkDisplay_1 = Show(wellsvtk, renderView2, 'GeometryRepresentation')

# trace defaults for the display properties.
wellsvtkDisplay_1.Representation = 'Surface'
wellsvtkDisplay_1.ColorArrayName = [None, '']
wellsvtkDisplay_1.SelectTCoordArray = 'None'
wellsvtkDisplay_1.SelectNormalArray = 'TubeNormals'
wellsvtkDisplay_1.SelectTangentArray = 'None'
wellsvtkDisplay_1.OSPRayScaleArray = 'TubeNormals'
wellsvtkDisplay_1.OSPRayScaleFunction = 'Piecewise Function'
wellsvtkDisplay_1.Assembly = ''
wellsvtkDisplay_1.SelectOrientationVectors = 'None'
wellsvtkDisplay_1.ScaleFactor = 106.60030212402344
wellsvtkDisplay_1.SelectScaleArray = 'None'
wellsvtkDisplay_1.GlyphType = 'Arrow'
wellsvtkDisplay_1.GlyphTableIndexArray = 'None'
wellsvtkDisplay_1.GaussianRadius = 5.330015106201172
wellsvtkDisplay_1.SetScaleArray = ['POINTS', 'TubeNormals']
wellsvtkDisplay_1.ScaleTransferFunction = 'Piecewise Function'
wellsvtkDisplay_1.OpacityArray = ['POINTS', 'TubeNormals']
wellsvtkDisplay_1.OpacityTransferFunction = 'Piecewise Function'
wellsvtkDisplay_1.DataAxesGrid = 'Grid Axes Representation'
wellsvtkDisplay_1.PolarAxes = 'Polar Axes Representation'
wellsvtkDisplay_1.SelectInputVectors = ['POINTS', 'TubeNormals']
wellsvtkDisplay_1.WriteLog = ''

# init the 'Piecewise Function' selected for 'OSPRayScaleFunction'
wellsvtkDisplay_1.OSPRayScaleFunction.Points = [472.22524879194134, 0.0, 0.5, 0.0, 472.22531497989996, 1.0, 0.5, 0.0]

# init the 'Piecewise Function' selected for 'ScaleTransferFunction'
wellsvtkDisplay_1.ScaleTransferFunction.Points = [-0.9980270266532898, 0.0, 0.5, 0.0, 0.9980270266532898, 1.0, 0.5, 0.0]

# init the 'Piecewise Function' selected for 'OpacityTransferFunction'
wellsvtkDisplay_1.OpacityTransferFunction.Points = [-0.9980270266532898, 0.0, 0.5, 0.0, 0.9980270266532898, 1.0, 0.5, 0.0]

# setup the color legend parameters for each legend in this view

# get color legend/bar for permxLUT in view renderView2
permxLUTColorBar = GetScalarBar(permxLUT, renderView2)
permxLUTColorBar.WindowLocation = 'Any Location'
permxLUTColorBar.Position = [0.8065596919127087, 0.03890034364261166]
permxLUTColorBar.Title = 'permx'
permxLUTColorBar.ComponentTitle = ''
permxLUTColorBar.ScalarBarLength = 0.3300000000000006
permxLUTColorBar.AutomaticLabelFormat = 0
permxLUTColorBar.LabelFormat = '%-#6.3f'
permxLUTColorBar.RangeLabelFormat = '%-#6.3f'

# set color bar visibility
permxLUTColorBar.Visibility = 1

# show color legend
meshvtuDisplay.SetScalarBarVisibility(renderView2, True)

# ----------------------------------------------------------------
# setup color maps and opacity maps used in the visualization
# note: the Get..() functions create a new object, if needed
# ----------------------------------------------------------------

# ----------------------------------------------------------------
# setup animation scene, tracks and keyframes
# note: the Get..() functions create a new object, if needed
# ----------------------------------------------------------------

# get the time-keeper
timeKeeper1 = GetTimeKeeper()

# initialize the timekeeper

# get time animation track
timeAnimationCue1 = GetTimeTrack()

# initialize the animation track

# get animation scene
animationScene1 = GetAnimationScene()

# initialize the animation scene
animationScene1.ViewModules = [renderView1, renderView2]
animationScene1.Cues = timeAnimationCue1
animationScene1.AnimationTime = 7305.0
animationScene1.EndTime = 7305.0
animationScene1.PlayMode = 'Snap To TimeSteps'

# initialize the animation scene

# ----------------------------------------------------------------
# restore active source
SetActiveSource(meshvtu)
# ----------------------------------------------------------------


##--------------------------------------------
## You may need to add some code at the end of this python script depending on your usage, eg:
#
## Render all views to see them appears
# RenderAllViews()
#
## Interact with the view, usefull when running from pvpython
# Interact()
#
## Save a screenshot of the active view
# SaveScreenshot("path/to/screenshot.png")
#
## Save a screenshot of a layout (multiple splitted view)
# SaveScreenshot("path/to/screenshot.png", GetLayout())
#
## Save all "Extractors" from the pipeline browser
# SaveExtracts()
#
## Save a animation of the current active view
# SaveAnimation()
#
## Please refer to the documentation of paraview.simple
## https://kitware.github.io/paraview-docs/latest/python/paraview.simple.html
##--------------------------------------------